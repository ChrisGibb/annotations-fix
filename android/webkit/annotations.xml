<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="android.webkit.RenderProcessGoneDetail int rendererPriorityAtExit()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.WebView.RENDERER_PRIORITY_WAIVED, android.webkit.WebView.RENDERER_PRIORITY_BOUND, android.webkit.WebView.RENDERER_PRIORITY_IMPORTANT}" />
    </annotation>
  </item>
  <item name="android.webkit.ServiceWorkerWebSettings int getCacheMode()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.WebSettings.LOAD_DEFAULT, android.webkit.WebSettings.LOAD_NORMAL, android.webkit.WebSettings.LOAD_CACHE_ELSE_NETWORK, android.webkit.WebSettings.LOAD_NO_CACHE, android.webkit.WebSettings.LOAD_CACHE_ONLY}" />
    </annotation>
  </item>
  <item name="android.webkit.ServiceWorkerWebSettings void setCacheMode(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.WebSettings.LOAD_DEFAULT, android.webkit.WebSettings.LOAD_NORMAL, android.webkit.WebSettings.LOAD_CACHE_ELSE_NETWORK, android.webkit.WebSettings.LOAD_NO_CACHE, android.webkit.WebSettings.LOAD_CACHE_ONLY}" />
    </annotation>
  </item>
  <item name="android.webkit.TracingConfig int getPredefinedCategories()">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.webkit.TracingConfig.CATEGORIES_NONE, android.webkit.TracingConfig.CATEGORIES_ALL, android.webkit.TracingConfig.CATEGORIES_ANDROID_WEBVIEW, android.webkit.TracingConfig.CATEGORIES_WEB_DEVELOPER, android.webkit.TracingConfig.CATEGORIES_INPUT_LATENCY, android.webkit.TracingConfig.CATEGORIES_RENDERING, android.webkit.TracingConfig.CATEGORIES_JAVASCRIPT_AND_RENDERING, android.webkit.TracingConfig.CATEGORIES_FRAME_VIEWER}" />
    </annotation>
  </item>
  <item name="android.webkit.TracingConfig int getTracingMode()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.TracingConfig.RECORD_UNTIL_FULL, android.webkit.TracingConfig.RECORD_CONTINUOUSLY}" />
    </annotation>
  </item>
  <item name="android.webkit.TracingConfig.Builder android.webkit.TracingConfig.Builder addCategories(int...) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.webkit.TracingConfig.CATEGORIES_NONE, android.webkit.TracingConfig.CATEGORIES_ALL, android.webkit.TracingConfig.CATEGORIES_ANDROID_WEBVIEW, android.webkit.TracingConfig.CATEGORIES_WEB_DEVELOPER, android.webkit.TracingConfig.CATEGORIES_INPUT_LATENCY, android.webkit.TracingConfig.CATEGORIES_RENDERING, android.webkit.TracingConfig.CATEGORIES_JAVASCRIPT_AND_RENDERING, android.webkit.TracingConfig.CATEGORIES_FRAME_VIEWER}" />
    </annotation>
  </item>
  <item name="android.webkit.TracingConfig.Builder android.webkit.TracingConfig.Builder setTracingMode(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.TracingConfig.RECORD_UNTIL_FULL, android.webkit.TracingConfig.RECORD_CONTINUOUSLY}" />
    </annotation>
  </item>
  <item name="android.webkit.WebSettings int getCacheMode()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.WebSettings.LOAD_DEFAULT, android.webkit.WebSettings.LOAD_NORMAL, android.webkit.WebSettings.LOAD_CACHE_ELSE_NETWORK, android.webkit.WebSettings.LOAD_NO_CACHE, android.webkit.WebSettings.LOAD_CACHE_ONLY}" />
    </annotation>
  </item>
  <item name="android.webkit.WebSettings int getDisabledActionModeMenuItems()">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.webkit.WebSettings.MENU_ITEM_NONE, android.webkit.WebSettings.MENU_ITEM_SHARE, android.webkit.WebSettings.MENU_ITEM_WEB_SEARCH, android.webkit.WebSettings.MENU_ITEM_PROCESS_TEXT}" />
    </annotation>
  </item>
  <item name="android.webkit.WebSettings int getForceDark()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.WebSettings.FORCE_DARK_OFF, android.webkit.WebSettings.FORCE_DARK_AUTO, android.webkit.WebSettings.FORCE_DARK_ON}" />
    </annotation>
  </item>
  <item name="android.webkit.WebSettings void setCacheMode(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.WebSettings.LOAD_DEFAULT, android.webkit.WebSettings.LOAD_NORMAL, android.webkit.WebSettings.LOAD_CACHE_ELSE_NETWORK, android.webkit.WebSettings.LOAD_NO_CACHE, android.webkit.WebSettings.LOAD_CACHE_ONLY}" />
    </annotation>
  </item>
  <item name="android.webkit.WebSettings void setDisabledActionModeMenuItems(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="true" />
      <val name="value" val="{android.webkit.WebSettings.MENU_ITEM_NONE, android.webkit.WebSettings.MENU_ITEM_SHARE, android.webkit.WebSettings.MENU_ITEM_WEB_SEARCH, android.webkit.WebSettings.MENU_ITEM_PROCESS_TEXT}" />
    </annotation>
  </item>
  <item name="android.webkit.WebSettings void setForceDark(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.WebSettings.FORCE_DARK_OFF, android.webkit.WebSettings.FORCE_DARK_AUTO, android.webkit.WebSettings.FORCE_DARK_ON}" />
    </annotation>
  </item>
  <item name="android.webkit.WebView int getRendererRequestedPriority()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.WebView.RENDERER_PRIORITY_WAIVED, android.webkit.WebView.RENDERER_PRIORITY_BOUND, android.webkit.WebView.RENDERER_PRIORITY_IMPORTANT}" />
    </annotation>
  </item>
  <item name="android.webkit.WebView void setRendererPriorityPolicy(int, boolean) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.WebView.RENDERER_PRIORITY_WAIVED, android.webkit.WebView.RENDERER_PRIORITY_BOUND, android.webkit.WebView.RENDERER_PRIORITY_IMPORTANT}" />
    </annotation>
  </item>
  <item name="android.webkit.WebViewClient void onSafeBrowsingHit(android.webkit.WebView, android.webkit.WebResourceRequest, int, android.webkit.SafeBrowsingResponse) 2">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.webkit.WebViewClient.SAFE_BROWSING_THREAT_UNKNOWN, android.webkit.WebViewClient.SAFE_BROWSING_THREAT_MALWARE, android.webkit.WebViewClient.SAFE_BROWSING_THREAT_PHISHING, android.webkit.WebViewClient.SAFE_BROWSING_THREAT_UNWANTED_SOFTWARE, android.webkit.WebViewClient.SAFE_BROWSING_THREAT_BILLING}" />
    </annotation>
  </item>
</root>

