<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="android.hardware.camera2.CameraAccessException CameraAccessException(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraAccessException.CAMERA_IN_USE, android.hardware.camera2.CameraAccessException.MAX_CAMERAS_IN_USE, android.hardware.camera2.CameraAccessException.CAMERA_DISABLED, android.hardware.camera2.CameraAccessException.CAMERA_DISCONNECTED, android.hardware.camera2.CameraAccessException.CAMERA_ERROR}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraAccessException CameraAccessException(int, java.lang.String) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraAccessException.CAMERA_IN_USE, android.hardware.camera2.CameraAccessException.MAX_CAMERAS_IN_USE, android.hardware.camera2.CameraAccessException.CAMERA_DISABLED, android.hardware.camera2.CameraAccessException.CAMERA_DISCONNECTED, android.hardware.camera2.CameraAccessException.CAMERA_ERROR}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraAccessException CameraAccessException(int, java.lang.String, java.lang.Throwable) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraAccessException.CAMERA_IN_USE, android.hardware.camera2.CameraAccessException.MAX_CAMERAS_IN_USE, android.hardware.camera2.CameraAccessException.CAMERA_DISABLED, android.hardware.camera2.CameraAccessException.CAMERA_DISCONNECTED, android.hardware.camera2.CameraAccessException.CAMERA_ERROR}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraAccessException CameraAccessException(int, java.lang.Throwable) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraAccessException.CAMERA_IN_USE, android.hardware.camera2.CameraAccessException.MAX_CAMERAS_IN_USE, android.hardware.camera2.CameraAccessException.CAMERA_DISABLED, android.hardware.camera2.CameraAccessException.CAMERA_DISCONNECTED, android.hardware.camera2.CameraAccessException.CAMERA_ERROR}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraAccessException int getReason()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraAccessException.CAMERA_IN_USE, android.hardware.camera2.CameraAccessException.MAX_CAMERAS_IN_USE, android.hardware.camera2.CameraAccessException.CAMERA_DISABLED, android.hardware.camera2.CameraAccessException.CAMERA_DISCONNECTED, android.hardware.camera2.CameraAccessException.CAMERA_ERROR}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraCharacteristics android.hardware.camera2.params.RecommendedStreamConfigurationMap getRecommendedStreamConfigurationMap(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_PREVIEW, android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_RECORD, android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_VIDEO_SNAPSHOT, android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_SNAPSHOT, android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_ZSL, android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_RAW, android.hardware.camera2.params.RecommendedStreamConfigurationMap.USECASE_LOW_LATENCY_SNAPSHOT}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraDevice android.hardware.camera2.CaptureRequest.Builder createCaptureRequest(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraDevice.TEMPLATE_PREVIEW, android.hardware.camera2.CameraDevice.TEMPLATE_STILL_CAPTURE, android.hardware.camera2.CameraDevice.TEMPLATE_RECORD, android.hardware.camera2.CameraDevice.TEMPLATE_VIDEO_SNAPSHOT, android.hardware.camera2.CameraDevice.TEMPLATE_ZERO_SHUTTER_LAG, android.hardware.camera2.CameraDevice.TEMPLATE_MANUAL}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraDevice android.hardware.camera2.CaptureRequest.Builder createCaptureRequest(int, java.util.Set&lt;java.lang.String&gt;) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraDevice.TEMPLATE_PREVIEW, android.hardware.camera2.CameraDevice.TEMPLATE_STILL_CAPTURE, android.hardware.camera2.CameraDevice.TEMPLATE_RECORD, android.hardware.camera2.CameraDevice.TEMPLATE_VIDEO_SNAPSHOT, android.hardware.camera2.CameraDevice.TEMPLATE_ZERO_SHUTTER_LAG, android.hardware.camera2.CameraDevice.TEMPLATE_MANUAL}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraDevice int getCameraAudioRestriction()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_NONE, android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_VIBRATION, android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_VIBRATION_SOUND}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraDevice void setCameraAudioRestriction(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_NONE, android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_VIBRATION, android.hardware.camera2.CameraDevice.AUDIO_RESTRICTION_VIBRATION_SOUND}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraDevice.StateCallback void onError(android.hardware.camera2.CameraDevice, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraDevice.StateCallback.ERROR_CAMERA_IN_USE, android.hardware.camera2.CameraDevice.StateCallback.ERROR_MAX_CAMERAS_IN_USE, android.hardware.camera2.CameraDevice.StateCallback.ERROR_CAMERA_DISABLED, android.hardware.camera2.CameraDevice.StateCallback.ERROR_CAMERA_DEVICE, android.hardware.camera2.CameraDevice.StateCallback.ERROR_CAMERA_SERVICE}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraManager boolean isConcurrentSessionConfigurationSupported(java.util.Map&lt;java.lang.String,android.hardware.camera2.params.SessionConfiguration&gt;)">
    <annotation name="androidx.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.CAMERA&quot;" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraManager void openCamera(java.lang.String, android.hardware.camera2.CameraDevice.StateCallback, android.os.Handler)">
    <annotation name="androidx.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.CAMERA&quot;" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraManager void openCamera(java.lang.String, java.util.concurrent.Executor, android.hardware.camera2.CameraDevice.StateCallback)">
    <annotation name="androidx.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.CAMERA&quot;" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback void onError(android.hardware.camera2.CameraOfflineSession, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CameraOfflineSession.CameraOfflineSessionCallback.STATUS_INTERNAL_ERROR}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.CaptureFailure int getReason()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.hardware.camera2.CaptureFailure.REASON_ERROR, android.hardware.camera2.CaptureFailure.REASON_FLUSHED}" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.DngCreator void writeByteBuffer(java.io.OutputStream, android.util.Size, java.nio.ByteBuffer, long) 3">
    <annotation name="androidx.annotation.IntRange">
      <val name="from" val="0" />
    </annotation>
  </item>
  <item name="android.hardware.camera2.DngCreator void writeInputStream(java.io.OutputStream, android.util.Size, java.io.InputStream, long) 3">
    <annotation name="androidx.annotation.IntRange">
      <val name="from" val="0" />
    </annotation>
  </item>
</root>

